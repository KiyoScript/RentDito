c
penalty_rate(due_date).round(2)
penalty_rate(due_date)).round(2)
base_amount.to_s
base_amount.format
base_amount
c
cc
reload!
penalty_rate(due_date)
([@charge.extra_charge_amount, @charge.electricity_share_amount].sum * penalty_rate(due_date)).round(2)
([@charge.extra_charge_amount, @charge.electricity_share_amount].sum * penalty_rate(due_date))
V
@charge.electricity_share_amount
@charge.extra_charge_amount
([@charge.extra_charge_amount, @charge.electricity_share_amount].sum * penalty_rate(due_date)).round(2).humanize
([@charge.extra_charge_amount, @charge.electricity_share_amount].sum * penalty_rate(due_date)).round(2).format
([@charge.extra_charge_amount, @charge.electricity_share_amount].sum * penalty_rate(due_date)).round(2)
c
amount
c
charge.wifi_share_amount
charge.billing.wifi_and_rental_end_date
V
charge.billing.electricity_bill_end_date
charge.water_share_amount
charge.billing.water_bill_end_date
charge
@charge
hello
hello = Date.current - charge.billing.wifi_and_rental_end_date
(Date.current - charge.billing.wifi_and_rental_end_date)
Date.current - charge.billing.wifi_and_rental_end_date
Date.current
charge.billing.wifi_and_rental_end_date
charge.billing.wifi_rental_end_date
charge.billing
charge.eletricity_total
charge.eletricity_total_amount
charge.eletricity
charge
billing.electricity_bill_end_date.to_date
billing.electricity_bill_end_date
billing
Date.current.strftime("%B %d, %Y")
Date.current.strftime("%B %d, %Y")
V
today.strftime("%B %d, %Y")
today.strftime("%B %d %Y")
today.strftime("%B %Y")
today
c
Date.today
today
2
2 = 2..Float::INFINITY
7..Float::INFINITY
7..Float::INFINITY
V
reload!
overdue_days = (Date.current - billing.electricity_bill_end_date).to_i
Date.current
today
billing.electricity_bill_end_date
(today - billing.electricity_bill_end_date).to_i
V
overdue_days = (today - billing.electricity_bill_end_date).to_i
overdue_days = (today = billing.electricity_bill_end_date).to_i
has_penalty?(charge, 'electricity_share_amount')
